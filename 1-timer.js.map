{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nlet selectedTime = null;\nlet timerInterval = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    const now = Date.now();\n    selectedTime = selectedDates[0].getTime();\n\n    if (selectedTime <= now) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(dateTimePicker, options);\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  dateTimePicker.disabled = true;\n\n  timerInterval = setInterval(() => {\n    const now = Date.now();\n    const delta = selectedTime - now;\n\n    if (delta <= 0) {\n      clearInterval(timerInterval);\n      iziToast.success({\n        message: 'Countdown finished!',\n        position: 'topRight',\n      });\n      return;\n    }\n\n    updateTimerDisplay(convertMs(delta));\n  }, 1000);\n});\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  daysSpan.textContent = addLeadingZero(days);\n  hoursSpan.textContent = addLeadingZero(hours);\n  minutesSpan.textContent = addLeadingZero(minutes);\n  secondsSpan.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = 60 * second;\n  const hour = 60 * minute;\n  const day = 24 * hour;\n\n  return {\n    days: Math.floor(ms / day),\n    hours: Math.floor((ms % day) / hour),\n    minutes: Math.floor(((ms % day) % hour) / minute),\n    seconds: Math.floor((((ms % day) % hour) % minute) / second),\n  };\n}\n"],"names":["startBtn","dateTimePicker","daysSpan","hoursSpan","minutesSpan","secondsSpan","selectedTime","timerInterval","options","selectedDates","now","iziToast","flatpickr","delta","updateTimerDisplay","convertMs","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"sGAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAAe,KACfC,EAAgB,KAEpBP,EAAS,SAAW,GAEpB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrB,MAAMC,EAAM,KAAK,MACjBJ,EAAeG,EAAc,CAAC,EAAE,QAAO,EAEnCH,GAAgBI,GAClBC,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EACDX,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,EAEAY,EAAUX,EAAgBO,CAAO,EAEjCR,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBC,EAAe,SAAW,GAE1BM,EAAgB,YAAY,IAAM,CAChC,MAAMG,EAAM,KAAK,MACXG,EAAQP,EAAeI,EAE7B,GAAIG,GAAS,EAAG,CACd,cAAcN,CAAa,EAC3BI,EAAS,QAAQ,CACf,QAAS,sBACT,SAAU,UAClB,CAAO,EACD,MACD,CAEDG,EAAmBC,EAAUF,CAAK,CAAC,CACpC,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAmB,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7DjB,EAAS,YAAckB,EAAeJ,CAAI,EAC1Cb,EAAU,YAAciB,EAAeH,CAAK,EAC5Cb,EAAY,YAAcgB,EAAeF,CAAO,EAChDb,EAAY,YAAce,EAAeD,CAAO,CAClD,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASN,EAAUO,EAAI,CAMrB,MAAO,CACL,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAQA,EAAK,MAAO,KAAQ,GAAM,EAChD,QAAS,KAAK,MAASA,EAAK,MAAO,KAAQ,IAAU,GAAM,CAC/D,CACA"}